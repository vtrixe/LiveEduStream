

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}





model User {
  id             String         @id @default(uuid())
  username       String         @unique
  imageUrl       String         @db.Text
  externalUserId String         @unique
  bio            String?        @db.Text
  organizations  Organization[]
  email String?
   following Enroll[] @relation("Following")
  followedBy Enroll[] @relation("FollowedBy")
  OrganizationRole String?


  
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Organization {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?  @db.Text
  users       User[]
   externalOrganizationId  String   @unique
  organizationDomain String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Invitations {
    id          String   @id @default(uuid())

    role String

    OrganizationID String
    email String
    status String @default("Pending")
    externalInvitationid String @unique
     

      createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Enroll {
  id String @id @default(uuid())
  followerId String
  followingId String
  follower User @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)
  following User @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

